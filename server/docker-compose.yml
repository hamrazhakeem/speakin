version: '3.8'

services:
  user_service_db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${USER_DB_NAME}
      POSTGRES_USER: ${USER_DB_USER}
      POSTGRES_PASSWORD: ${USER_DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    container_name: user_service_db
    networks:
      - microservice_network
    ports:
      - "5432:5432"

  user_service:
    build:
      context: ./user_service
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./user_service:/app
    ports:
      - "8000:8000"
    environment:
      - USER_DB_NAME=${USER_DB_NAME}
      - USER_DB_USER=${USER_DB_USER}
      - USER_DB_PASSWORD=${USER_DB_PASSWORD}
      - USER_DB_HOST=${USER_DB_HOST}
      - USER_DB_PORT=${USER_DB_PORT}
    depends_on:
      - user_service_db
    container_name: user_service
    networks:
      - microservice_network

  api_gateway:
    build:
      context: ./api_gateway
    command: python manage.py runserver 0.0.0.0:8080
    volumes:
      - ./api_gateway:/app
    ports:
      - "8080:8080" 
    container_name: api_gateway
    networks:
      - microservice_network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    container_name: redis
    networks:
      - microservice_network

volumes:
  postgres_data:

networks:
  microservice_network:
    driver: bridge