version: '3.8'

services:
  api_gateway:
    container_name: api_gateway
    build:
      context: ./api_gateway
    volumes:
      - ./api_gateway:/app
    ports:
      - "8080:8080" 
    networks:
      - microservice_network

  user_service:
    container_name: user_service
    build:
      context: ./user_service
    volumes:
      - ./user_service:/app
    ports:
      - "8000:8000"
      - "50051:50051"
    depends_on:
      - user_service_db
    networks:
      - microservice_network

  payment_service:
    container_name: payment_service
    build:
      context: ./payment_service
    volumes:
      - ./payment_service:/app
    ports:
      - "8001:8001"
    depends_on:
      - payment_service_db
    networks:
      - microservice_network

  user_service_db:
    image: postgres:13
    container_name: user_service_db
    environment:
      POSTGRES_DB: ${USER_DB_NAME}
      POSTGRES_USER: ${USER_DB_USER}
      POSTGRES_PASSWORD: ${USER_DB_PASSWORD}
    volumes:
      - user_db_data:/var/lib/postgresql/data
    networks:
      - microservice_network
    ports:
      - "5432:5432"

  payment_service_db:
    image: postgres:13
    container_name: payment_service_db
    environment:
      POSTGRES_DB: ${PAYMENT_DB_NAME}
      POSTGRES_USER: ${PAYMENT_DB_USER}
      POSTGRES_PASSWORD: ${PAYMENT_DB_PASSWORD}
    volumes:
      - payment_db_data:/var/lib/postgresql/data
    networks:
      - microservice_network
    ports:
      - "5433:5432"

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - microservice_network

  stripe_cli:
    image: stripe/stripe-cli:latest
    container_name: stripe_cli
    command: listen --forward-to http://host.docker.internal:8080/api/webhook/
    networks:
      - microservice_network
    depends_on:
      - payment_service
    restart: on-failure:5 
    volumes:
      - ./payment_service:/app

volumes:
  user_db_data:
  payment_db_data:

networks:
  microservice_network:
    driver: bridge